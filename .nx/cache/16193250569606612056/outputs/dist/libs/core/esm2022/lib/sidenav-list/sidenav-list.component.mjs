import { Component, Input, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/icon";
import * as i3 from "@angular/material/expansion";
import * as i4 from "@angular/material/tooltip";
import * as i5 from "@angular/material/list";
export class SidenavListComponent {
    constructor() {
        this.itemClicked = new EventEmitter();
    }
    // want to allow any data to pass through here
    onItemClicked(item) {
        this.itemClicked.emit(item);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.1", ngImport: i0, type: SidenavListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.1", type: SidenavListComponent, selector: "tft-sidenav-list", inputs: { sections: "sections" }, outputs: { itemClicked: "itemClicked" }, ngImport: i0, template: "<mat-nav-list>\n\n  <mat-accordion>\n    <mat-expansion-panel *ngFor=\"let section of sections\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          {{section.title}}\n        </mat-panel-title>\n        <mat-panel-description>\n          {{section.subtitle}}\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-list-item\n        *ngFor=\"let link of section.links\"\n        (click)=\"onItemClicked(link)\">\n\n        <a matLine>\n          {{ link.title }}\n        </a>\n        <mat-icon *ngIf=\"!!link.description\"\n          [matTooltip]=\"link.description || 'Description coming soon!'\">\n          info\n        </mat-icon>\n      </mat-list-item>\n      <tft-sidenav-list\n        [sections]=\"section.subsections\"\n        (itemClicked)=\"onItemClicked($event)\">\n      </tft-sidenav-list>\n    </mat-expansion-panel>\n  </mat-accordion>\n</mat-nav-list>", styles: ["mat-expansion-panel{margin:8px}::ng-deep .mat-expansion-panel-content .mat-expansion-panel-body{padding:0 0 12px}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: i3.MatAccordion, selector: "mat-accordion", inputs: ["multi", "hideToggle", "displayMode", "togglePosition"], exportAs: ["matAccordion"] }, { kind: "component", type: i3.MatExpansionPanel, selector: "mat-expansion-panel", inputs: ["disabled", "expanded", "hideToggle", "togglePosition"], outputs: ["opened", "closed", "expandedChange", "afterExpand", "afterCollapse"], exportAs: ["matExpansionPanel"] }, { kind: "component", type: i3.MatExpansionPanelHeader, selector: "mat-expansion-panel-header", inputs: ["tabIndex", "expandedHeight", "collapsedHeight"] }, { kind: "directive", type: i3.MatExpansionPanelTitle, selector: "mat-panel-title" }, { kind: "directive", type: i3.MatExpansionPanelDescription, selector: "mat-panel-description" }, { kind: "directive", type: i4.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { kind: "component", type: i5.MatNavList, selector: "mat-nav-list", exportAs: ["matNavList"] }, { kind: "component", type: i5.MatListItem, selector: "mat-list-item, a[mat-list-item], button[mat-list-item]", inputs: ["activated"], exportAs: ["matListItem"] }, { kind: "component", type: SidenavListComponent, selector: "tft-sidenav-list", inputs: ["sections"], outputs: ["itemClicked"] }], preserveWhitespaces: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.1", ngImport: i0, type: SidenavListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tft-sidenav-list', template: "<mat-nav-list>\n\n  <mat-accordion>\n    <mat-expansion-panel *ngFor=\"let section of sections\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          {{section.title}}\n        </mat-panel-title>\n        <mat-panel-description>\n          {{section.subtitle}}\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-list-item\n        *ngFor=\"let link of section.links\"\n        (click)=\"onItemClicked(link)\">\n\n        <a matLine>\n          {{ link.title }}\n        </a>\n        <mat-icon *ngIf=\"!!link.description\"\n          [matTooltip]=\"link.description || 'Description coming soon!'\">\n          info\n        </mat-icon>\n      </mat-list-item>\n      <tft-sidenav-list\n        [sections]=\"section.subsections\"\n        (itemClicked)=\"onItemClicked($event)\">\n      </tft-sidenav-list>\n    </mat-expansion-panel>\n  </mat-accordion>\n</mat-nav-list>", styles: ["mat-expansion-panel{margin:8px}::ng-deep .mat-expansion-panel-content .mat-expansion-panel-body{padding:0 0 12px}\n"] }]
        }], propDecorators: { sections: [{
                type: Input
            }], itemClicked: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZW5hdi1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY29yZS9zcmMvbGliL3NpZGVuYXYtbGlzdC9zaWRlbmF2LWxpc3QuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9jb3JlL3NyYy9saWIvc2lkZW5hdi1saXN0L3NpZGVuYXYtbGlzdC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7O0FBUXZFLE1BQU0sT0FBTyxvQkFBb0I7SUFMakM7UUFRWSxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFlLENBQUM7S0FPekQ7SUFMQyw4Q0FBOEM7SUFDOUMsYUFBYSxDQUFDLElBQWlCO1FBQzdCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlCLENBQUM7OEdBUlUsb0JBQW9CO2tHQUFwQixvQkFBb0IsbUlDUmpDLDg1QkE4QmUsdW9ERHRCRixvQkFBb0I7OzJGQUFwQixvQkFBb0I7a0JBTGhDLFNBQVM7K0JBQ0Usa0JBQWtCOzhCQU1uQixRQUFRO3NCQUFoQixLQUFLO2dCQUNJLFdBQVc7c0JBQXBCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2lkZW5hdlNlY3Rpb24sIFNpZGVuYXZMaW5rIH0gZnJvbSAnLi9zaWRlbmF2LWxpc3QubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0ZnQtc2lkZW5hdi1saXN0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3NpZGVuYXYtbGlzdC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3NpZGVuYXYtbGlzdC5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIFNpZGVuYXZMaXN0Q29tcG9uZW50IHtcblxuICBASW5wdXQoKSBzZWN0aW9uczogU2lkZW5hdlNlY3Rpb25bXTtcbiAgQE91dHB1dCgpIGl0ZW1DbGlja2VkID0gbmV3IEV2ZW50RW1pdHRlcjxTaWRlbmF2TGluaz4oKTtcblxuICAvLyB3YW50IHRvIGFsbG93IGFueSBkYXRhIHRvIHBhc3MgdGhyb3VnaCBoZXJlXG4gIG9uSXRlbUNsaWNrZWQoaXRlbTogU2lkZW5hdkxpbmspIHtcbiAgICB0aGlzLml0ZW1DbGlja2VkLmVtaXQoaXRlbSk7XG4gIH1cblxufVxuIiwiPG1hdC1uYXYtbGlzdD5cblxuICA8bWF0LWFjY29yZGlvbj5cbiAgICA8bWF0LWV4cGFuc2lvbi1wYW5lbCAqbmdGb3I9XCJsZXQgc2VjdGlvbiBvZiBzZWN0aW9uc1wiPlxuICAgICAgPG1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyPlxuICAgICAgICA8bWF0LXBhbmVsLXRpdGxlPlxuICAgICAgICAgIHt7c2VjdGlvbi50aXRsZX19XG4gICAgICAgIDwvbWF0LXBhbmVsLXRpdGxlPlxuICAgICAgICA8bWF0LXBhbmVsLWRlc2NyaXB0aW9uPlxuICAgICAgICAgIHt7c2VjdGlvbi5zdWJ0aXRsZX19XG4gICAgICAgIDwvbWF0LXBhbmVsLWRlc2NyaXB0aW9uPlxuICAgICAgPC9tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcj5cbiAgICAgIDxtYXQtbGlzdC1pdGVtXG4gICAgICAgICpuZ0Zvcj1cImxldCBsaW5rIG9mIHNlY3Rpb24ubGlua3NcIlxuICAgICAgICAoY2xpY2spPVwib25JdGVtQ2xpY2tlZChsaW5rKVwiPlxuXG4gICAgICAgIDxhIG1hdExpbmU+XG4gICAgICAgICAge3sgbGluay50aXRsZSB9fVxuICAgICAgICA8L2E+XG4gICAgICAgIDxtYXQtaWNvbiAqbmdJZj1cIiEhbGluay5kZXNjcmlwdGlvblwiXG4gICAgICAgICAgW21hdFRvb2x0aXBdPVwibGluay5kZXNjcmlwdGlvbiB8fCAnRGVzY3JpcHRpb24gY29taW5nIHNvb24hJ1wiPlxuICAgICAgICAgIGluZm9cbiAgICAgICAgPC9tYXQtaWNvbj5cbiAgICAgIDwvbWF0LWxpc3QtaXRlbT5cbiAgICAgIDx0ZnQtc2lkZW5hdi1saXN0XG4gICAgICAgIFtzZWN0aW9uc109XCJzZWN0aW9uLnN1YnNlY3Rpb25zXCJcbiAgICAgICAgKGl0ZW1DbGlja2VkKT1cIm9uSXRlbUNsaWNrZWQoJGV2ZW50KVwiPlxuICAgICAgPC90ZnQtc2lkZW5hdi1saXN0PlxuICAgIDwvbWF0LWV4cGFuc2lvbi1wYW5lbD5cbiAgPC9tYXQtYWNjb3JkaW9uPlxuPC9tYXQtbmF2LWxpc3Q+Il19